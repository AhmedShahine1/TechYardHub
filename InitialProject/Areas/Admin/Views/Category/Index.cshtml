@model IEnumerable<CategoryDto>

<h2>Categories</h2>

<p>
    <a asp-action="Create" class="btn btn-primary">Create Category</a>
</p>

<!-- Category List Table -->
<table id="categoryTable" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Image</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var category in Model)
        {
            <tr>
                <td>@category.Name</td>
                <td>@category.Description</td>
                <td>
                    <img src="@category.ImageUrl" alt="@category.Name" width="50" height="50" />
                </td>
                <td>
                    <!-- Change Status Button with Modal Trigger -->
                    <button type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#statusModal"
                            onclick="openStatusModal('@category.Id', '@category.Name', @category.Status.ToString().ToLower())">
                        @if (category.Status)
                        {
                            <span>Deactivate</span>
                        }
                        else
                        {
                            <span>Activate</span>
                        }
                    </button>
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@category.Id" class="btn btn-warning">Edit</a>
                    <!-- Delete Button in the Category List -->
                    <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#deleteModal" onclick="openDeleteModal('@category.Id','@category.Name')">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Buttons for Export -->
<p>
    <button class="btn btn-success" onclick="downloadExcel()">
        <i class="fas fa-file-excel"></i> Download as Excel
    </button>
    <button class="btn btn-primary" onclick="downloadPDF()">
        <i class="fas fa-file-pdf"></i> Download as PDF
    </button>
</p>

<!-- AdminLTE Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger">
                <h5 class="modal-title" id="deleteModalLabel">Delete Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the Category "<span id="category-name"></span>"? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Status Confirmation Modal -->
<div class="modal fade" id="statusModal" tabindex="-1" role="dialog" aria-labelledby="statusModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-info">
                <h5 class="modal-title" id="statusModalLabel">Change category Status</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to <span id="status-action"></span> the category "<span id="status-category-name"></span>"?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">Cancel</button>
                <form id="statusForm" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-info">Confirm</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.12.1/js/dataTables.bootstrap4.min.js"></script>
    <!-- SheetJS for Excel Export -->
    <script src="https://cdn.sheetjs.com/xlsx-latest/package/dist/xlsx.full.min.js"></script>

    <!-- jsPDF for PDF Export -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.20/jspdf.plugin.autotable.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#categoryTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "lengthChange": true
            });
        });

        let deleteCategoryId = '';
        let deleteCategoryName = '';

        // Open the delete modal and set the product details
        function openDeleteModal(categoryId, categoryName) {
            deleteCategoryId = categoryId;
            deleteCategoryName = categoryName;
            document.getElementById('category-name').textContent = deleteCategoryName;

            // Update the form action with the product ID for deletion
            const deleteForm = document.getElementById('deleteForm');
            deleteForm.action = '/Admin/Category/Delete/' + deleteCategoryId;
        }


    </script>
    <script>
        let statusCategoryId = '';
        let statusCategoryName = '';
        let statusAction = '';

        // Open the status modal and set the product details
        function openStatusModal(CategoryId, CategoryName, currentStatus) {
            console.log(CategoryId);
            console.log(CategoryName);
            console.log(currentStatus);
            statusCategoryId = CategoryId;
            statusCategoryName = CategoryName;
            statusAction = currentStatus ? 'deactivate' : 'activate';
            // Update modal content
            document.getElementById('status-category-name').textContent = statusCategoryName;
            document.getElementById('status-action').textContent = statusAction;

            // Update the form action with the product ID for status update
            const statusForm = document.getElementById('statusForm');
            statusForm.action = '/Admin/Category/UpdateStatus/' + statusCategoryId;
        }
        function downloadExcel() {
            // Get the table element
            var table = document.getElementById('categoryTable');

            // Extract the table data (including header) and format it for SheetJS
            var rows = [];

            // Get the header row
            var header = [];
            var th = table.querySelectorAll('thead th');
            th.forEach(function (item) {
                header.push(item.innerText); // Get the header text
            });
            rows.push(header);

            // Get the table body rows (excluding the header row)
            var tableRows = table.querySelectorAll('tbody tr');
            tableRows.forEach(function (row) {
                var rowData = [];
                var cells = row.querySelectorAll('td');
                cells.forEach(function (cell) {
                    rowData.push(cell.innerText); // Get the data text from each cell
                });
                rows.push(rowData);
            });

            // Create a new workbook and add the extracted rows
            var wb = XLSX.utils.aoa_to_book(rows, { sheet: "Categories" });

            // Generate binary data for the Excel file
            var wbout = XLSX.write(wb, { bookType: "xlsx", type: "binary" });

            // Convert to binary string for download
            function s2ab(s) {
                var buf = new ArrayBuffer(s.length);
                var view = new Uint8Array(buf);
                for (var i = 0; i < s.length; i++) {
                    view[i] = s.charCodeAt(i) & 0xff;
                }
                return buf;
            }

            // Trigger the download
            var a = document.createElement("a");
            a.href = URL.createObjectURL(new Blob([s2ab(wbout)], { type: "application/octet-stream" }));
            a.download = "categories.xlsx"; // Set the default file name
            a.click();
        }
        function downloadPDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Get the table element
            var table = document.getElementById('categoryTable');

            // Extract the table data and format it for jsPDF
            const rows = [];
            for (let i = 1; i < table.rows.length; i++) {
                const row = table.rows[i];
                const rowData = [];
                for (let j = 0; j < row.cells.length - 1; j++) { // Exclude the actions column
                    rowData.push(row.cells[j].innerText);
                }
                rows.push(rowData);
            }

            // Add the table to the PDF
            doc.autoTable({
                head: [['Name', 'Description', 'Image', 'Status']],
                body: rows,
            });

            // Save the PDF
            doc.save('categories.pdf');
        }

    </script>
}